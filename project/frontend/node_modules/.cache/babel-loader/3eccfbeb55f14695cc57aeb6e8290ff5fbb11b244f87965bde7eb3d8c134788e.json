{"ast":null,"code":"// utils/authFetch.js\nexport async function authFetch(url, options = {}) {\n  let token = localStorage.getItem('token');\n  let refreshToken = localStorage.getItem('refresh_token');\n  options.headers = {\n    ...options.headers,\n    Authorization: `Bearer ${token}`,\n    'Content-Type': 'application/json'\n  };\n  let response = await fetch(url, options);\n  if (response.status === 401 || response.status === 422) {\n    // Tenta renovar o token\n    const refreshRes = await fetch('http://localhost:5000/api/auth/refresh', {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${refreshToken}`\n      }\n    });\n    if (refreshRes.ok) {\n      const data = await refreshRes.json();\n      localStorage.setItem('token', data.token);\n      options.headers.Authorization = `Bearer ${data.token}`;\n      response = await fetch(url, options);\n    } else {\n      localStorage.removeItem('token');\n      localStorage.removeItem('refresh_token');\n      window.location.href = '/login';\n      return;\n    }\n  }\n  return response;\n}","map":{"version":3,"names":["authFetch","url","options","token","localStorage","getItem","refreshToken","headers","Authorization","response","fetch","status","refreshRes","method","ok","data","json","setItem","removeItem","window","location","href"],"sources":["C:/Users/Mateus/Downloads/ProjetoFinal/project/frontend/src/utils/authFetch.js"],"sourcesContent":["// utils/authFetch.js\r\nexport async function authFetch(url, options = {}) {\r\n  let token = localStorage.getItem('token');\r\n  let refreshToken = localStorage.getItem('refresh_token');\r\n  options.headers = {\r\n    ...options.headers,\r\n    Authorization: `Bearer ${token}`,\r\n    'Content-Type': 'application/json'\r\n  };\r\n\r\n  let response = await fetch(url, options);\r\n\r\n  if (response.status === 401 || response.status === 422) {\r\n    // Tenta renovar o token\r\n    const refreshRes = await fetch('http://localhost:5000/api/auth/refresh', {\r\n      method: 'POST',\r\n      headers: { Authorization: `Bearer ${refreshToken}` }\r\n    });\r\n    if (refreshRes.ok) {\r\n      const data = await refreshRes.json();\r\n      localStorage.setItem('token', data.token);\r\n      options.headers.Authorization = `Bearer ${data.token}`;\r\n      response = await fetch(url, options);\r\n    } else {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('refresh_token');\r\n      window.location.href = '/login';\r\n      return;\r\n    }\r\n  }\r\n  return response;\r\n}\r\n"],"mappings":"AAAA;AACA,OAAO,eAAeA,SAASA,CAACC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EACjD,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACzC,IAAIC,YAAY,GAAGF,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;EACxDH,OAAO,CAACK,OAAO,GAAG;IAChB,GAAGL,OAAO,CAACK,OAAO;IAClBC,aAAa,EAAE,UAAUL,KAAK,EAAE;IAChC,cAAc,EAAE;EAClB,CAAC;EAED,IAAIM,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAG,EAAEC,OAAO,CAAC;EAExC,IAAIO,QAAQ,CAACE,MAAM,KAAK,GAAG,IAAIF,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;IACtD;IACA,MAAMC,UAAU,GAAG,MAAMF,KAAK,CAAC,wCAAwC,EAAE;MACvEG,MAAM,EAAE,MAAM;MACdN,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUF,YAAY;MAAG;IACrD,CAAC,CAAC;IACF,IAAIM,UAAU,CAACE,EAAE,EAAE;MACjB,MAAMC,IAAI,GAAG,MAAMH,UAAU,CAACI,IAAI,CAAC,CAAC;MACpCZ,YAAY,CAACa,OAAO,CAAC,OAAO,EAAEF,IAAI,CAACZ,KAAK,CAAC;MACzCD,OAAO,CAACK,OAAO,CAACC,aAAa,GAAG,UAAUO,IAAI,CAACZ,KAAK,EAAE;MACtDM,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAG,EAAEC,OAAO,CAAC;IACtC,CAAC,MAAM;MACLE,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC;MAChCd,YAAY,CAACc,UAAU,CAAC,eAAe,CAAC;MACxCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MAC/B;IACF;EACF;EACA,OAAOZ,QAAQ;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}